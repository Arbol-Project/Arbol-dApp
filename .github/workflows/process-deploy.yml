on:
  push:
    branches:
      - feat/*

name: Deployment

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Get .env secrets
      uses: say8425/aws-secrets-manager-actions@v1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        SECRET_NAME: dapp
        OUTPUT_PATH: './chainlink_node/chainlink/.env'
    
    - name: Translate ENV variables
      run: |
        printenv

    - name: Get API secrets
      run: echo ${{ secrets.API }} > ./chainlink_node/chainlink/.api

    - name: Get Password secret
      run: echo ${{ secrets.PASSWORD }} > ./chainlink_node/chainlink/.password

    - name: Get TLS cert
      run: echo ${{ secrets.TLS_CERT }} > ./chainlink_node/chainlink/tls/server.crt

    - name: Get TLS key
      run: echo ${{ secrets.TLS_KEY }} > ./chainlink_node/chainlink/tls/server.key

    - name: Set docker registery secret
      run: printf ${{ secrets.DOCKER_REGISTRY }} | docker secret create docker_registry -

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create and set ECS context
      run: |
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        export AWS_REGION=us-east-1
        docker context create ecs dappecs --from-env
        docker context use dappecs

    - name: Build
      run: docker compose build --project-directory ./chainlink_node -f docker-compose.aws.yml

    - name: Deploy
      run: docker compose up
      