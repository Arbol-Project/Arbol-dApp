{"version":3,"sources":["components/index.js","Arbol_logo.png","hooks/useWeb3Modal.js","../../contracts/src/addresses.js","../../contracts/src/abis.js","App.js","index.js"],"names":["themeOptions","palette","type","primary","main","secondary","background","default","paper","text","Body","styled","header","div","Col","Image","img","Text","p","Link","a","attrs","target","rel","button","props","hidden","NETWORK","useWeb3Modal","config","useState","provider","setProvider","autoLoaded","setAutoLoaded","autoLoad","providerID","network","web3Modal","useMemo","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraid","loadWeb3Modal","useCallback","connect","newProvider","Web3Provider","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","useEffect","cachedProvider","console","log","abis","BlizzardDerivativeProvider","BlizzardDerivativeProviderAbi","abi","BlizzardOption","BlizzardOptionAbi","erc20","erc20Abi","Contracts","require","Providers","_addresses","LINK","USDC","Object","entries","cname","cdata","address","pname","pdata","addresses","theme","createTheme","addressBook","WalletButton","account","setAccount","rendered","setRendered","listAccounts","accounts","substring","error","fetchAccount","variant","sx","onClick","App","internalRows","setInternalRows","tokenRows","setTokenRows","data","new_rows","i","length","row","date","Date","parseInt","toISOString","startsWith","getAddress","push","reverse","deploy_hashes","j","includes","_provider","defaultSigner","getSigner","defaultAddress","MainContract","Contract","usdc","COLLATERAL_ADDRESS","collateralAddress","PREMIUM_ADDRESS","premiumAddress","COLLATERAL_PAYMENT","collateralAmount","PREMIUM_PAYMENT","premiumAmount","approve","tx","wait","depositCollateral","depositPremium","blizzardContract","deployedAddress","fetch","then","resp","json","tokenDataSetter","result","internalDataSetter","ThemeProvider","Box","flexGrow","AppBar","position","Toolbar","href","style","textDecoration","marginTop","fontSize","Grid","container","direction","justifyContent","alignItems","item","xs","src","logo","alt","depositUSDC","height","width","marginBottom","rows","columns","field","headerName","pageSize","rowsPerPageOptions","client","ApolloClient","uri","ReactDOM","render","ApolloProvider","value","document","getElementById"],"mappings":"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","file":"static/js/main.b3589ae7.chunk.js","sourcesContent":["import styled from \"styled-components\";\n// import { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\n\nexport const themeOptions = {\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#124125',\n    },\n    secondary: {\n      main: '#ffc400',\n    },\n    background: {\n      default: '#0c180c',\n      paper: '#303939',\n    },\n    text: {\n      primary: '#ffffff',\n    },\n  },\n};\n\nexport const Header = styled.header`\n  background-color: ${themeOptions.palette.primary.main};\n  min-height: 70px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  color: white;\n`;\n\nexport const Body = styled.div`\n  align-items: center;\n  background-color: ${themeOptions.palette.background.default};\n  color: white;\n  display: flex;\n  flex-direction: row;\n  font-size: calc(10px + 2vmin);\n  justify-content: center;\n  min-height: calc(70vh);\n  font-family: Inter;\n`;\n\nexport const Col = styled.div`\n  align-items: center;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-size: calc(10px + 2vmin);\n  justify-content: center;\n  min-height: calc(100vh);\n  font-family: Inter;\n  margin-left: 8px;\n  margin-right: 8px;\n`;\n\nexport const Image = styled.img`\n  height: 25vmin;\n  margin-bottom: 8px;\n  margin-top: 10px;\n  pointer-events: none;\n`;\n\nexport const Title = styled.p`\n  color: ${themeOptions.palette.secondary.main};\n  margin-top: 8px;\n  margin-bottom: 8px;\n  margin-left: 8px;\n  font-size: calc(12px + 2vmin);\n  font-family: 'Press Start 2P';\n`;\n\nexport const Text = styled.p`\n  color: white;\n  padding: 0px 20px;\n  margin: 10px 0px;\n  font-size: calc(4px + 2vmin);\n  font-family: Quicksand;\n`;\n\nexport const Link = styled.a.attrs({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n})`\n  color: ${themeOptions.palette.secondary.main};\n  margin-top: 8px;\n  margin-bottom: 8px;\n  font-size: 10px;\n  font-family: \"Press Start 2P\";\n`;\n\nexport const Button = styled.button`\n  background-color: ${themeOptions.palette.primary.main};\n  border: none;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  margin: 0px 20px;\n  padding: 10px 14px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  font-family: Quicksand;\n\n  ${props => props.hidden && \"hidden\"} :focus {\n    border: none;\n    outline: none;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/Arbol_logo.55e4141f.png\";","import { Web3Provider } from \"@ethersproject/providers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\n// import Formatic from \"formatic\";\n// const ALCHEMY_TOKEN = process.env.ALCHEMY_TOKEN;\nconst INFURA_ID = \"\";\nconst NETWORK = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, providerID = INFURA_ID, network = NETWORK } = config;\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  const web3Modal = useMemo(() => {\n    return new Web3Modal({\n      network,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraid: providerID\n          },\n        },\n      },\n    });\n  }, [providerID, network]);\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      console.log(\"auto\");\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst Contracts = require(\"./logs/contracts.json\");\nconst Providers = require(\"./logs/providers.json\");\n\nvar _addresses = {LINK: \"0xb0897686c545045aFc77CF20eC7A532E3120E0F1\", USDC: \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"};\nfor (const [cname, cdata] of Object.entries(Contracts)) {\n  _addresses[cname] = cdata.address;\n}\nfor (const [pname, pdata] of Object.entries(Providers)) {\n  _addresses[pname] = pdata.address;\n}\nconst addresses = _addresses;\n\nexport default addresses;\n","// import RainfallDerivativeProviderAbi from \"./abis/RainfallDerivativeProvider.json\";\n// import RainfallOptionAbi from \"./abis//RainfallOption.json\";\nimport BlizzardDerivativeProviderAbi from \"./abis/BlizzardDerivativeProvider.json\";\nimport BlizzardOptionAbi from \"./abis/BlizzardOption.json\";\nimport erc20Abi from \"./abis/erc20.json\";\n\n\nconst abis = {\n  // RainfallDerivativeProvider: RainfallDerivativeProviderAbi.abi,\n  // RainfallOption: RainfallOptionAbi.abi,\n  BlizzardDerivativeProvider: BlizzardDerivativeProviderAbi.abi,\n  BlizzardOption: BlizzardOptionAbi.abi,\n  erc20: erc20Abi\n};\n\nexport default abis;\n","import { Contract } from \"@ethersproject/contracts\";\nimport { getAddress } from \"@ethersproject/address\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Body, Image, Text, Link, Col, themeOptions } from \"./components\";\nimport logo from \"./Arbol_logo.png\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport { addresses, abis } from \"@project/contracts\";\n\nimport { Grid, Button, AppBar, Box, Toolbar } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { DataGrid } from '@mui/x-data-grid';\n\nexport const theme = createTheme(themeOptions);\n\nconst addressBook = {\n  \"0xa679c6154b8d4619Af9F83f0bF9a13A680e01eCf\": \"Purchaser\",\n  \"0xbf417C41F3ab1e01BD6867fB540dA7b734EaeA95\": \"Provider\",\n  [addresses.BlizzardDerivativeProvider]: \"Contract\"\n}\n\n\nfunction WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal }) {\n  const [account, setAccount] = useState(\"\");\n  const [rendered, setRendered] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchAccount() {\n      try {\n        if (!provider) {\n          return;\n        }\n        // Load the user's accounts.\n        const accounts = await provider.listAccounts();\n        setAccount(accounts[0]);\n        setRendered(account.substring(0, 6) + \"...\" + account.substring(36));\n        // }\n      } catch (err) {\n        setAccount(\"\");\n        setRendered(\"\");\n        console.error(err);\n      }\n    }\n    fetchAccount();\n  }, [account, provider, setAccount, setRendered]);\n\n  return (\n    <Button \n      variant=\"Text\"\n      sx={{\n        \"margin\": \"8px 4px\",\n        'background': 'linear-gradient(45deg, #FFC400 30%, #FFCF33 90%)',\n        'border': 0,\n        'borderRadius': 3,\n        'boxShadow': '0 3px 5px 2px rgba(0, 0, 0, .3)',\n        'color': 'white',\n      }}\n      onClick={() => {\n        if (!provider) {\n          loadWeb3Modal();\n        } else {\n          logoutOfWeb3Modal();\n        }\n      }}\n    >\n      {rendered === \"\" && \"Connect Wallet\"}\n      {rendered !== \"\" && rendered}\n    </Button>\n  );\n}\n \nfunction App() {\n\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal();\n\n  const [internalRows, setInternalRows] = useState([]);\n  const [tokenRows, setTokenRows] = useState([]);\n\n\n  const tokenColumns = [\n    { field: 'id', headerName: '#', width: 10 },\n\n    { field: 'time', headerName: 'Time', width: 200 },\n    { field: 'hash', headerName: 'Tx Hash', width: 120 },\n    { field: 'from', headerName: 'Caller', width: 120 },\n    { field: 'action', headerName: 'Action', width: 160 },\n    { field: 'value', headerName: 'Amount', width: 120 },\n  ];\n\n  const internalColumns = [\n    { field: 'id', headerName: '#', width: 10 },\n\n    { field: 'time', headerName: 'Time', width: 200 },\n    { field: 'hash', headerName: 'Tx Hash', width: 120 },\n    { field: 'action', headerName: 'Action', width: 200 },\n  ];\n\n  useEffect(() => {\n    fetch(\"https://api.polygonscan.com/api?module=account&action=tokentx&address=\"+addresses.BlizzardDerivativeProvider+\"&startblock=0&endblock=999999999&sort=asc&apikey=\"+process.env.REACT_APP_POLYGONSCAN_KEY)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data);\n      tokenDataSetter(data.result)})\n    }, []);\n\n  async function tokenDataSetter(data) {\n    var new_rows = []\n    for (var i = 0; i < data.length; i++) {\n      const row = data[i];\n      row[\"id\"] = i;      \n      var date = new Date(parseInt(row[\"timeStamp\"]) * 1000);\n      row[\"time\"] = date.toISOString();\n      if (row[\"value\"].startsWith(\"25\")) {\n        row[\"action\"] = \"Escrow Collateral\";\n      } else {\n        row[\"action\"] = \"Deposit Premium\";\n      }\n      if (getAddress(row[\"from\"]) in addressBook) {\n        row[\"from\"] = addressBook[getAddress(row[\"from\"])];\n        new_rows.push(row);\n      } \n    }\n    setTokenRows(new_rows.reverse());\n  }\n\n\n  useEffect(() => {\n    fetch(\"https://api.polygonscan.com/api?module=account&action=txlistinternal&address=\"+addresses.BlizzardDerivativeProvider+\"&startblock=0&endblock=999999999&sort=asc&apikey=\"+process.env.REACT_APP_POLYGONSCAN_KEY)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data);\n      internalDataSetter(data.result)})\n    }, []);\n\n  async function internalDataSetter(data) {\n    var new_rows = [];\n    var deploy_hashes = [];\n    for (var i = 0; i < data.length; i++) {\n      const row = data[i];\n      row[\"id\"] = i;\n      var date = new Date(parseInt(row[\"timeStamp\"]) * 1000);\n      row[\"time\"] = date.toISOString();\n      if (row[\"type\"] !== \"create\") {\n        deploy_hashes.push(row[\"hash\"]);\n      }\n      if (row[\"type\"] === \"staticcall\") {\n        row[\"action\"] = \"Get Parameters\";\n      } else if (row[\"type\"] === \"call\") {\n        row[\"action\"] = \"Authorize Transfer\";\n      }\n      if (getAddress(row[\"from\"]) in addressBook) {\n        row[\"from\"] = addressBook[getAddress(row[\"from\"])];\n      }\n      new_rows.push(row);\n    }\n    for (var j = 0; j < new_rows.length; j++) {\n      const row = new_rows[j];\n      if (row[\"type\"] === \"create\") {\n        if (deploy_hashes.includes(row[\"hash\"])) {\n          row[\"action\"] = \"Deploy Contract\";\n        } else {\n          row[\"action\"] = \"Deploy Verification Proxy\";\n        }\n      }\n    }\n    setInternalRows(new_rows.reverse());\n  }\n\n\n  async function depositUSDC(_provider) {\n    const defaultSigner = _provider.getSigner();\n    const defaultAddress = await defaultSigner.getAddress();\n    const MainContract = new Contract(addresses.BlizzardDerivativeProvider, abis.BlizzardDerivativeProvider, defaultSigner);\n    const usdc = new Contract(addresses.USDC, abis.erc20, defaultSigner);\n\n    var collateralAddress = await MainContract.COLLATERAL_ADDRESS();\n    var premiumAddress = await MainContract.PREMIUM_ADDRESS();\n    var collateralAmount = await MainContract.COLLATERAL_PAYMENT();\n    var premiumAmount = await MainContract.PREMIUM_PAYMENT();\n\n    if (defaultAddress === collateralAddress) {\n\n      var tx = await usdc.approve(addresses.BlizzardDerivativeProvider, collateralAmount);\n      await tx.wait();\n\n      tx = await MainContract.depositCollateral();\n      await tx.wait();\n    } else if (defaultAddress === premiumAddress) {\n\n      tx = await usdc.approve(addresses.BlizzardDerivativeProvider, premiumAmount);\n      await tx.wait();\n\n      tx = await MainContract.depositPremium();\n      await tx.wait();\n\n      const deployedAddress = await MainContract.blizzardContract();\n      console.log(deployedAddress);\n    } \n  }\n\n\n  return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n              <Toolbar sx={{\"justifyContent\": \"space-between\", 'boxShadow': '0 3px 5px 2px rgba(0, 0, 0, .3)'}}>\n                <Link href=\"https://www.arbolmarket.com/\" style={{ textDecoration: 'none', marginTop: \"8px\", fontSize: \"calc(12px + 2vmin)\" }}> {'ARBOL-dAPP PORTAL'} </Link>\n                  <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n              </Toolbar>\n            </AppBar>\n          </Box>\n          <Body>\n            <Grid\n              container\n              direction=\"row\"\n              justifyContent=\"space-around\"\n              alignItems='stretch'\n            >\n              <Grid item xs={6}>\n                <Col>\n                  <Image src={logo} alt=\"react-logo\" />\n                      {/* <Text> \n                        Provider\n                      </Text>\n                      <Button \n                        variant=\"contained\" \n                        sx={{\n                          \"margin\": \"8px 4px\",\n                          'background': 'linear-gradient(45deg, #EF5350 30%, #EA6A6A 90%)',\n                          'border': 0,\n                          'borderRadius': 3,\n                          'boxShadow': '0 3px 5px 2px rgba(255, 255, 255, .3)',\n                          'color': 'white',\n                        }} \n                        onClick={() => depositUSDC(provider)}>\n                        ESCROW COLLATERAL\n                      </Button> */}\n                      <Text> \n                        {/* Purchaser */}\n                      </Text>\n                      <Button \n                        variant=\"contained\" \n                        sx={{\n                          \"margin\": \"8px 4px\",\n                          'background': 'linear-gradient(45deg, #EF5350 30%, #EA6A6A 90%)',\n                          'border': 0,\n                          'borderRadius': 3,\n                          'boxShadow': '0 3px 5px 2px rgba(255, 255, 255, .3)',\n                          'color': 'white',\n                        }} \n                        onClick={() => depositUSDC(provider)}>\n                        PURCHASE CONTRACT\n                      </Button>\n                  <Text> \n                    The Arbol-dApp Portal provides an endpoint for interacting with Arbol's Blizzard Derivative Provider smart contract deployed on Polygon Mainnet\n                    and permits a pre-approved buyer to purchase a 250K Blizzard Protection contract at a premium of 10K. \n                  </Text>\n                  <Text>\n                  The protection contract automatically pays out the collateral amount to the buyer \n                    if 3+ inches of snow are reported in Dallas on any of the coverage dates. The data source for weather observations is GHCND:USW00003927 (GHCND records for Dallas Fort Worth airport weather station).\n                  </Text>\n                  {/* <Text>\n                    The Escrow Collateral option approves the Derivative Provider smart contract to transfer the collateral cost in USDC from the caller's wallet, then executes the actual transfer. Collateral must be deposited before contract purchase.\n                  </Text> */}\n                  <Text>\n                    The Purchase Contract button approves the smart contract to transfer the premium cost in USDC from the caller's wallet, then executes the actual transfer and deploys a new protection contract.\n                    Internal transactions and token transfers associated with the Derivative Provider smart contract are updated on refresh.\n                  </Text>\n                </Col>\n              </Grid>\n            <Grid item xs={6}>\n              <Col>\n                <Text>\n                    Token Transfers\n                  </Text>\n                <div style={{ height: 200, width: '90%', marginTop: \"10px\", marginBottom: \"40px\"}}>\n                  <DataGrid\n                    rows={tokenRows}\n                    columns={tokenColumns}\n                    pageSize={8}\n                    rowsPerPageOptions={[8]}\n                  />\n                </div>\n                  <Text>\n                    Internal Transactions\n                  </Text>\n                <div style={{ height: 320, width: '90%', marginTop: \"10px\", marginBottom: \"20px\"}}>\n                  <DataGrid\n                    rows={internalRows}\n                    columns={internalColumns}\n                    pageSize={8}\n                    rowsPerPageOptions={[8]}\n                  />\n                </div>\n                <Link href={\"https://polygonscan.com/address/\" + addresses.BlizzardDerivativeProvider} style={{ marginTop: \"8px\" }}> polygonscan </Link>\n                <Link href=\"https://github.com/Arbol-Project/Arbol-dApp\" style={{ marginTop: \"8px\" }}> source </Link>\n              </Col>\n            </Grid>\n          </Grid>\n          </Body>\n        </ThemeProvider>\n      </div>\n  );\n}\n\nexport default App;","import \"./index.css\";\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n// You should replace this url with your own and put it into a .env file\n// See all subgraphs: https://thegraph.com/explorer/\nconst client = new ApolloClient({\n  uri: \"\",\n});\n\nReactDOM.render(\n  <ApolloProvider client={client} value={[]}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}